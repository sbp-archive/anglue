{"version":3,"sources":["../../src/test-helpers.js"],"names":[],"mappings":";;;;;;;;;;;;AAIA,MAAI,OAAO,GAAG,CAAC,CAAC;;AAET,WAAS,cAAc,CAAC,cAAc,EAAyB;QAAvB,gBAAgB,yDAAG,EAAE;;AAClE,QAAI,CAAC,cAAc,CAAC,UAAU,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE;AAC7G,YAAM,IAAI,KAAK,uCAAqC,cAAc,CAAC,IAAI,CAAG,CAAC;KAC5E;;AAED,QAAM,OAAO,GAAG,WATV,iBAAiB,EASW,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;AAChF,QAAM,KAAK,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;;AAE1F,QAAM,QAAQ,SAAO,OAAO,GAAG,KAAK,GAAG,gBAAgB,WAAM,OAAO,MAAG,CAAC;AACxE,QAAM,UAAU,GAAG,WAbM,iBAAiB,EAaL,OAAO,CAAC,CAAC;;AAE9C,WAAO,IAAI,CAAC,CAAC;AACb,QAAM,aAAa,wBAAsB,OAAO,AAAE,CAAC;;AAEnD,yBAAQ,MAAM,CAAC,aAAa,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEvE,QAAI,UAAU,GAAG,IAAI,CAAC;;AAEtB,yBAAQ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AACnC,yBAAQ,IAAI,CAAC,MAAM,CAAC,UAAC,UAAU,EAAE,YAAY,EAAK;AAChD,UAAM,gBAAgB,GAAG,eAAe,CAAC,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;AAC7E,gBAAU,GAAG,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AACrD,gBAAU,CAAC,QAAQ,GAAG,gBAAgB,CAAC;AACvC,gBAAU,CAAC,UAAU,GAAG;eAAM,YAAY,CAAC,OAAO,EAAE;OAAA,CAAC;KACtD,CAAC,CAAC;;AAEH,WAAO,UAAU,CAAC;GACnB;;AAED,WAAS,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE;AACvD,QAAM,EAAE,GAAG,qBAAQ,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AAC5C,YAAQ,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAChC,cAAU,CAAC,OAAO,EAAE,CAAC;AACrB,WAAO,EAAE,CAAC;GACX","file":"test-helpers.js","sourcesContent":["import angular from 'angular';\nimport 'angular-mocks';\nimport {camelCaseToDashes, dashesToCamelCase} from './utils';\n\nlet counter = 0;\n\nexport function buildComponent(ComponentClass, attributesString = '') {\n  if (!ComponentClass.annotation || !ComponentClass.annotation.module || !ComponentClass.annotation.module.name) {\n    throw new Error(`ComponentClass is not annotated: ${ComponentClass.name}`);\n  }\n\n  const tagName = camelCaseToDashes(ComponentClass.annotation.name).toLowerCase();\n  const space = attributesString.length > 0 && !attributesString.startsWith(' ') ? ' ' : '';\n\n  const template = `<${tagName}${space}${attributesString}></${tagName}>`;\n  const elProperty = dashesToCamelCase(tagName);\n\n  counter += 1;\n  const componentName = `TestedComponents${counter}`;\n\n  angular.module(componentName, [ComponentClass.annotation.module.name]);\n\n  let controller = null;\n\n  angular.mock.module(componentName);\n  angular.mock.inject((_$compile_, _$rootScope_) => {\n    const compiledTemplate = compileTemplate(template, _$compile_, _$rootScope_);\n    controller = compiledTemplate.controller(elProperty);\n    controller._element = compiledTemplate;\n    controller.rootDigest = () => _$rootScope_.$digest();\n  });\n\n  return controller;\n}\n\nfunction compileTemplate(template, $compile, $rootScope) {\n  const el = angular.element(template.trim());\n  $compile(el)($rootScope.$new());\n  $rootScope.$digest();\n  return el;\n}\n"]}