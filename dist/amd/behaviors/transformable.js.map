{"version":3,"sources":["../../../src/behaviors/transformable.js"],"names":[],"mappings":"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","file":"transformable.js","sourcesContent":["import {addStaticGetterArrayMember} from '../utils';\n\nexport class Transformer {\n  constructor(name, fn, weight = 100) {\n    this.name = name;\n    this.fn = fn;\n    this.weight = weight;\n  }\n\n  exec(value) {\n    return this.fn(value);\n  }\n}\n\nexport class TransformableCollection {\n  transformed = [];\n  transformers = [];\n\n  set data(data) {\n    this._data = data;\n    this.refresh();\n  }\n\n  get data() {\n    if (!this._data) {\n      this._data = [];\n    }\n    return this._data;\n  }\n\n  addTransformer(transformer) {\n    if (this.transformers.indexOf(transformer) === -1) {\n      this.transformers.push(transformer);\n\n      this.transformers.sort((transA, transB) => {\n        if (transA.weight > transB.weight) {\n          return 1;\n        } else if (transA.weight < transB.weight) {\n          return -1;\n        }\n        return 0;\n      });\n\n      this.refresh();\n    }\n  }\n\n  removeTransformer(transformer) {\n    const index = this.transformers.indexOf(transformer);\n    if (index >= 0) {\n      this.transformers.splice(index, 1);\n      this.refresh();\n    }\n  }\n\n  clearTransformers() {\n    this.transformers.splice(0, this.transformers.length);\n    this.refresh();\n  }\n\n  refresh() {\n    let transformed = this.data.slice();\n    for (const transformer of this.transformers) {\n      transformed = transformer.exec(transformed);\n    }\n    this.transformed = transformed;\n  }\n}\n\nexport function Transformable() {\n  return (cls, propertyName) => {\n    const transformableDescriptor = {\n      get() {\n        return this.transformables[propertyName].transformed;\n      },\n      set(data) {\n        this.transformables[propertyName].data = data;\n      }\n    };\n\n    addStaticGetterArrayMember(cls.constructor, 'transformers', propertyName);\n\n    if (!Reflect.getOwnPropertyDescriptor(cls, 'transformables')) {\n      Reflect.defineProperty(cls, 'transformables', {\n        get() {\n          if (!this._transformables) {\n            this._transformables = {};\n            for (const transformer of cls.constructor.transformers) {\n              this._transformables[transformer] = new TransformableCollection();\n            }\n          }\n          return this._transformables;\n        }\n      });\n    }\n\n    if (!Reflect.getOwnPropertyDescriptor(cls, propertyName)) {\n      Reflect.defineProperty(cls, propertyName, transformableDescriptor);\n    }\n\n    return transformableDescriptor;\n  };\n}\n"]}