{"version":3,"sources":["../../../src/behaviors/paginatable-component.js"],"names":[],"mappings":"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","file":"paginatable-component.js","sourcesContent":["import angular from 'angular';\nimport {Behavior} from './behavior';\nimport {addBehavior} from '../utils';\nimport {COMPONENT_ENTITY_REGEX} from '../component';\n\nexport class PaginatableComponentBehavior extends Behavior {\n  constructor(instance, {actions, store, initialPage, initialLimit} = {}) {\n    super(...arguments);\n\n    this.actions = actions;\n    this.store = store;\n\n    const className = Reflect.getPrototypeOf(instance).constructor.name;\n    if (!this.actionsRef) {\n      throw new Error(`PaginatableComponentBehavior: actionsRef '${actions}' not found on ${className}`);\n    }\n    if (!this.storeRef) {\n      throw new Error(`PaginatableComponentBehavior: storeRef '${store}' not found on ${className}`);\n    } else if (!this.storeRef.paginatableStore) {\n      throw new Error(`PaginatableComponentBehavior: storeRef '${store}' on ${className} is not paginatable`);\n    }\n\n    this.page = initialPage === undefined ? 1 : initialPage;\n    this.limit = initialLimit === undefined ? 25 : initialLimit;\n  }\n\n  get actionsRef() {\n    return this.instance[this.actions];\n  }\n  get storeRef() {\n    return this.instance[this.store];\n  }\n\n  set page(page) {\n    if (page !== this.page) {\n      this.actionsRef.pageChange(page);\n    }\n  }\n  set limit(limit) {\n    if (limit !== this.limit) {\n      this.actionsRef.limitChange(limit);\n    }\n  }\n\n  get page() {\n    return this.storeRef.paginationState.page;\n  }\n  get limit() {\n    return this.storeRef.paginationState.limit;\n  }\n  get total() {\n    return this.storeRef.paginationState.total;\n  }\n}\n\nexport function PaginatableComponent(config = {}) {\n  return cls => {\n    let preparedConfig = config;\n    if (angular.isString(config)) {\n      preparedConfig = {entity: config};\n    }\n\n    if (!preparedConfig.entity) {\n      preparedConfig.entity = cls.name.match(COMPONENT_ENTITY_REGEX)[1].toLowerCase();\n    }\n    if (!preparedConfig.actions) {\n      preparedConfig.actions = `${preparedConfig.entity}Actions`;\n    }\n    if (!preparedConfig.store) {\n      preparedConfig.store = `${preparedConfig.entity}Store`;\n    }\n\n    addBehavior(cls, PaginatableComponentBehavior, {\n      property: 'pagination',\n      config: preparedConfig\n    });\n  };\n}\n"]}