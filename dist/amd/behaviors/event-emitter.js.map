{"version":3,"sources":["../../../src/behaviors/event-emitter.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;MAGa,oBAAoB;cAApB,oBAAoB;;aAApB,oBAAoB;4BAApB,oBAAoB;;iCAApB,oBAAoB;;;iBAApB,oBAAoB;;aAQpB,qBAAC,KAAK,EAAE,OAAO,EAAE;;;AAC1B,YAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,YAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACtB,gBAAM,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;SAC9B;AACD,cAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC/B,eAAO,YAAM;AACX,gBAAK,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACrC,CAAC;OACH;;;aAEa,wBAAC,KAAK,EAAE,OAAO,EAAE;AAC7B,YAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,YAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnC,YAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;AACvC,iBAAO;SACR;AACD,gBAAQ,UAAO,CAAC,OAAO,CAAC,CAAC;AACzB,YAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AAClB,gBAAM,UAAO,CAAC,KAAK,CAAC,CAAC;SACtB;OACF;;;aAEG,cAAC,KAAK,EAAE;AACV,YAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,YAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACtB,iBAAO;SACR;;AAED,YAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;;;;AAC5C,+BAAsB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,8HAAE;gBAA9B,OAAO;;AAChB,mBAAO,qCAAI,IAAI,EAAC,CAAC;WAClB;;;;;;;;;;;;;;;OACF;;;WAxCS,eAAG;AACX,YAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACjB,cAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;SAC1B;AACD,eAAO,IAAI,CAAC,OAAO,CAAC;OACrB;;;WANU,oBAAoB;eAHzB,QAAQ;;;;AA+CT,WAAS,YAAY,CAAC,MAAM,EAAE;AACnC,WAAO,UAAA,GAAG,EAAI;AACZ,iBAhDI,WAAW,EAgDH,GAAG,EAAE,oBAAoB,EAAE;AACrC,cAAM,EAAN,MAAM;AACN,gBAAQ,EAAE,cAAc;AACxB,aAAK,EAAE,CACL,gBAAgB,EAChB,oBAAoB,EACpB,aAAa,EACb,gBAAgB,EAChB,MAAM,CACP;OACF,CAAC,CAAC;KACJ,CAAC;GACH","file":"event-emitter.js","sourcesContent":["import {Behavior} from './behavior';\nimport {addBehavior} from '../utils';\n\nexport class EventEmitterBehavior extends Behavior {\n  get events() {\n    if (!this._events) {\n      this._events = new Map();\n    }\n    return this._events;\n  }\n\n  addListener(event, handler) {\n    const events = this.events;\n    if (!events.has(event)) {\n      events.set(event, new Set());\n    }\n    events.get(event).add(handler);\n    return () => {\n      this.removeListener(event, handler);\n    };\n  }\n\n  removeListener(event, handler) {\n    const events = this.events;\n    const eventSet = events.get(event);\n    if (!eventSet || !eventSet.has(handler)) {\n      return;\n    }\n    eventSet.delete(handler);\n    if (!eventSet.size) {\n      events.delete(event);\n    }\n  }\n\n  emit(event) {\n    const events = this.events;\n    if (!events.has(event)) {\n      return;\n    }\n\n    const args = Array.from(arguments).slice(1);\n    for (const handler of events.get(event)) {\n      handler(...args);\n    }\n  }\n}\n\nexport function EventEmitter(config) {\n  return cls => {\n    addBehavior(cls, EventEmitterBehavior, {\n      config,\n      property: 'eventEmitter',\n      proxy: [\n        'on:addListener',\n        'off:removeListener',\n        'addListener',\n        'removeListener',\n        'emit'\n      ]\n    });\n  };\n}\n"]}